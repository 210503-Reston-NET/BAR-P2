// <auto-generated />
using System;
using BCDL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BCDL.Migrations
{
    [DbContext(typeof(BookClubDBContext))]
    partial class BookClubDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BCModel.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Badge")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserEmail");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("BCModel.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("text");

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("ISBN");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BCModel.BookClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BookISBN")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN");

                    b.ToTable("BookClubs");
                });

            modelBuilder.Entity("BCModel.BooksRead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BookISBN")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN");

                    b.HasIndex("UserEmail");

                    b.ToTable("BooksRead");
                });

            modelBuilder.Entity("BCModel.BooksToRead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BookISBN")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN");

                    b.HasIndex("UserEmail");

                    b.ToTable("BooksToRead");
                });

            modelBuilder.Entity("BCModel.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BCModel.ClubPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BookClubId")
                        .HasColumnType("integer");

                    b.Property<string>("Post")
                        .HasColumnType("text");

                    b.Property<int>("TotalDislike")
                        .HasColumnType("integer");

                    b.Property<int>("TotalLike")
                        .HasColumnType("integer");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookClubId");

                    b.HasIndex("UserEmail");

                    b.ToTable("ClubPosts");
                });

            modelBuilder.Entity("BCModel.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ClubPostId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.Property<int?>("UserPostId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClubPostId");

                    b.HasIndex("UserEmail");

                    b.HasIndex("UserPostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BCModel.FavoriteBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BookISBN")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN");

                    b.HasIndex("UserEmail");

                    b.ToTable("FavoriteBooks");
                });

            modelBuilder.Entity("BCModel.Recommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BookISBN")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("ReceversEmailsEmail")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN");

                    b.HasIndex("ReceversEmailsEmail");

                    b.HasIndex("UserEmail");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("BCModel.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BCModel.UserPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Post")
                        .HasColumnType("text");

                    b.Property<int>("TotalDislike")
                        .HasColumnType("integer");

                    b.Property<int>("TotalLike")
                        .HasColumnType("integer");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserEmail");

                    b.ToTable("UserPost");
                });

            modelBuilder.Entity("BCModel.Achievement", b =>
                {
                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BCModel.Book", b =>
                {
                    b.HasOne("BCModel.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BCModel.BookClub", b =>
                {
                    b.HasOne("BCModel.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookISBN");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BCModel.BooksRead", b =>
                {
                    b.HasOne("BCModel.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookISBN");

                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BCModel.BooksToRead", b =>
                {
                    b.HasOne("BCModel.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookISBN");

                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BCModel.ClubPost", b =>
                {
                    b.HasOne("BCModel.BookClub", "BookClub")
                        .WithMany()
                        .HasForeignKey("BookClubId");

                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.Navigation("BookClub");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BCModel.Comment", b =>
                {
                    b.HasOne("BCModel.ClubPost", "ClubPost")
                        .WithMany()
                        .HasForeignKey("ClubPostId");

                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.HasOne("BCModel.UserPost", "UserPost")
                        .WithMany()
                        .HasForeignKey("UserPostId");

                    b.Navigation("ClubPost");

                    b.Navigation("User");

                    b.Navigation("UserPost");
                });

            modelBuilder.Entity("BCModel.FavoriteBook", b =>
                {
                    b.HasOne("BCModel.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookISBN");

                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BCModel.Recommendation", b =>
                {
                    b.HasOne("BCModel.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookISBN");

                    b.HasOne("BCModel.User", "ReceversEmails")
                        .WithMany()
                        .HasForeignKey("ReceversEmailsEmail");

                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.Navigation("Book");

                    b.Navigation("ReceversEmails");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BCModel.UserPost", b =>
                {
                    b.HasOne("BCModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BCModel.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
